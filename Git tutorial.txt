## Initialization

Initialize a git repository
- open command prompt
- place yourself in the project folder (cd..)
- git init


## Manipulations

Check status:
git status

Check differences:
git diff filename

Add file to staging
git add filename

Stage all files
git add .

Remove file from staging
git rm --cached filename

If file contains spaces, quote/unquote

Compare file to file in staging:
git diff -r HEAD (for the most recent version)
git diff -r HEAD path/to/file (for specific file)

Edit file (UNIX)
nano filename
Ctrl-K: delete a line.
Ctrl-U: un-delete a line.
Ctrl-O: save the file ('O' stands for 'output').
Ctrl-X: exit the editor.

Commit
git commit -m "log message"

Check repository commit history
git log

Short version:
git log --oneline

Check one single file history
git log path

Checkout/Revert/Reset a commit: https://www.youtube.com/watch?v=RIYrfkZjWmA&list=PL4cUxeGkcC9goXbgTDQ0n_4TBzOO0ocPR&index=7
Checkout: check what's inside this commit in particular
Revert: "kind of" delete a particular commit
Reset: delete all the commits after one particular commit

Checkout:
git checkout e0a9052

Go back to master branch after checkout
git checkout e0a9052

Revert commit
git revert e0a9052

Create branch
git branch branchname

Check list of available branches and see which branch we're on
git branch -a

Checkout on specific branch
git checkout branchname

Create & checkout branch (shortcut)
git checkout -b branchname

Delete specific branch
git branch -D branchname

MErging branches
Checkout to branch we want to merge into (e.g. master)
git merge branchname

Push repository on github
git push https://github.com/jpmaalouf/test.git master

Setting URL alias (named origin below)
git remote add origin https://github.com/jpmaalouf/github-tutorial.git






